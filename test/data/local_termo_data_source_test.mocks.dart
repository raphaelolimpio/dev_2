// Mocks generated by Mockito 5.4.6 from annotations
// in dev/test/data/local_termo_data_source_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;

import 'package:dev/core/json_file_mananger.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [JsonFileManager].
///
/// See the documentation for Mockito's code generation for more information.
class MockJsonFileManager extends _i1.Mock implements _i2.JsonFileManager {
  MockJsonFileManager() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<Map<String, dynamic>> readJson(
    String? filePath, {
    bool? fromAsset = false,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#readJson, [filePath], {#fromAsset: fromAsset}),
            returnValue: _i3.Future<Map<String, dynamic>>.value(
              <String, dynamic>{},
            ),
          )
          as _i3.Future<Map<String, dynamic>>);

  @override
  //_i3.Future<void> writeJson(String? fileName, Map<String, dynamic>? data) =>
  //  (super.noSuchMethod(
  //      Invocation.method(#writeJson, [fileName, data]),
  //    returnValue: _i3.Future<void>.value(),
  //  returnValueForMissingStub: _i3.Future<void>.value(),
  //)
  //as _i3.Future<void>);
  @override
  _i3.Future<bool> fileExists(String? fileName) =>
      (super.noSuchMethod(
            Invocation.method(#fileExists, [fileName]),
            returnValue: _i3.Future<bool>.value(false),
          )
          as _i3.Future<bool>);

  @override
  _i3.Future<void> copyAssetToLocal(String? assetPath, String? localFileName) =>
      (super.noSuchMethod(
            Invocation.method(#copyAssetToLocal, [assetPath, localFileName]),
            returnValue: _i3.Future<void>.value(),
            returnValueForMissingStub: _i3.Future<void>.value(),
          )
          as _i3.Future<void>);
}
